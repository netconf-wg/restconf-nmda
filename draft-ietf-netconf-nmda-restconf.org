#
# NMDA Changes for RESTCONF
#

This document extends the RESTCONF protocol defined in RFC 8040 in
order to support the Network Management Datastore Architecture
defined in I-D.ietf-netmod-revised-datastores.

This document updates RFC 8040 by introducing new datastore
resources, adding a new query parameter, and requiring the usage of
I-D.ietf-netconf-rfc7895bis by RESTCONF servers implementing
the Network Management Datastore Architecture.

REF Editor: please replace "I-D.ietf-netmod-revised-datastores" and
"I-D.ietf-netconf-rfc7895bis" above with their final RFC assignments.

* Introduction

This document extends the RESTCONF protocol defined in ^RFC8040^ in
order to support the Network Management Datastore Architecture (NMDA)
defined in ^I-D.ietf-netmod-revised-datastores^.

This document updates ^RFC8040^ in order to enable RESTCONF clients
to discover which datastores are supported by the RESTCONF server,
as well as determine which modules are supported in each datastore
and, finally, to interact with all the datastores supported by the
NMDA.  Specifically, the update introduces new datastore resources,
adds a new query parameter, and requires the usage of
^I-D.ietf-netconf-rfc7895bis^ by RESTCONF servers implementing
the NMDA.

The solution presented in this document is backwards compatible with
^RFC8040^.  This is achieved by only adding new resources and
leaving the semantics of the existing resources unchanged.

** Terminology

This document uses the terminology defined by the NMDA
^I-D.ietf-netmod-revised-datastores^.

The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in BCP
14, ^RFC2119^ ^RFC8174^ when, and only when, they appear in all capitals,
as shown here.

* Datastore and YANG Library Requirements

RFC Ed.: Update 201X-XX-XX below with correct date.

An NMDA-compliant RESTCONF server MUST support the operational state
datastore and it MUST implement at least revision 201X-XX-XX of the
"ietf-yang-library" module defined in ^I-D.ietf-netconf-rfc7895bis^.

Such a server identifies that it supports the NMDA both by
implementing the {+restconf}/ds/ietf-datastores:operational resource,
and by implementing at least revision 201X-XX-XX of the
"ietf-yang-library" module.

A RESTCONF client can test if a server supports the NMDA by using
either the HEAD or GET methods on
{+restconf}/ds/ietf-datastores:operational.

* RESTCONF Support for the NMDA

This section describes the RESTCONF changes needed to support the NMDA.

** New Datastore Resources @new-ds-resources@

This document defines a set of new resources representing datastores
as defined in ^I-D.ietf-netmod-revised-datastores^.  These resources
are available using the following resource path template:

  {+restconf}/ds/<datastore>

The <datastore> path component is encoded as an "identity" according
to the JSON encoding rules for identities, defined in Section 4 of
^RFC7951^.  Such an identity MUST be derived from the "datastore"
identity defined in the "ietf-datastores" YANG module
^I-D.ietf-netmod-revised-datastores^.

Specifically:

- The resource {+restconf}/ds/ietf-datastores:operational
  refers to the operational state datastore.
- The resource {+restconf}/ds/ietf-datastores:running refers to the
  running configuration datastore.
- The resource {+restconf}/ds/ietf-datastores:intended refers to the
  intended configuration datastore.

An NMDA-compliant server MUST implement
{+restconf}/ds/ietf-datastores:operational.  Other datastore resources
are optional to implement.

YANG actions can only be invoked in
{+restconf}/ds/ietf-datastores:operational.

If a server implements the example datastore "ds-ephemeral" in
the module "example-ds-ephemeral", it would implement the resource
{+restconf}/ds/example-ds-ephemeral:ds-ephemeral.

** Protocol Operations

The protocol operations available for the new datastore resources
(^new-ds-resources^) are the same as the protocol operations
defined in ^RFC8040^ for the {+restconf}/data resource with the
following exceptions:

# is the following needed, since revised-datastores does not define
# any dynamic datastores?
- Dynamic configuration datastores are excluded, as each dynamic
  configuration datastore definition needs to be reviewed for what
  protocol operations it supports.

- Some datastores are read-only by nature (e.g., <intended>), and
  hence any attempt to modify these datastores will fail.

- The "with-defaults" query parameter (^RFC8040^, Section 4.8.9) does
  not apply when interacting with
  {+restconf}/ds/ietf-datastores:operational.  This means that all
  values are always returned from the operational state datastore,
  even if a node happens to have a default statement in the YANG
  module, and this default value is being used by the server. If the
  "with-defaults" query parameter is present in a request to this
  resource, the server MUST return a response with a "400 Bad Request"
  status-line.  The error-tag value "invalid-value" is used in this
  case.

- ^RFC8040^, Section 3.5.4, paragraph 3 does not apply when
  interacting with any resource under {+restconf}/ds.

*** New "with-origin" Query Parameter

The new query parameter named "with-origin" is added to the GET
operation. If present, it requests that the server includes "origin"
metadata annotations in its response, as detailed in the NMDA.  This
parameter is only valid when querying
{+restconf}/ds/ietf-datastores:operational or any datastores with
identities derived from the "operational" identity. Otherwise, if an
invalid datastore is specified then the server MUST return a response
with a "400 Bad Request" status-line, using an error-tag value of
"invalid-value".  "origin" metadata annotations are not included
unless a client explicitly requests them.

Data in the operational state datatstore can come from multiple
sources.  The server should return the most accurate value for the
"origin" metadata annotation as possible, indicating the source of the
operational value, as specified in Section 5.3.4 of
^I-D.ietf-netmod-revised-datastores^.

When encoding the origin metadata annotation for a hierarchy of
returned nodes, the annotation may be omitted for a child node when
the value matches that of the parent node, as described in
"ietf-origin" YANG module ^I-D.ietf-netmod-revised-datastores^.

The "with-origin" query parameter is optional to support.  It is
identified with the URI:

  urn:ietf:params:restconf:capability:with-origin:1.0

* IANA Considerations

This document defines one capability in the "RESTCONF Capability URNs"
registry defined in ^RFC8040^:

  Index          Capability Identifier
  ------------------------------------------------------------------

  :with-origin   urn:ietf:params:restconf:capability:with-origin:1.0

* Security Considerations

This documents extends the RESTCONF protocol by introducing new
datastore resources. The lowest RESTCONF layer is HTTPS, and the
mandatory-to-implement secure transport is TLS ^RFC5246^. The RESTCONF
protocol uses the network configuration access control model
^I-D.ietf-netconf-rfc6536bis^, which provides the means to restrict
access for particular RESTCONF users to a preconfigured subset of all
available RESTCONF protocol operations and content.

The security constraints for the base RESTCONF protocol (see Section
12 of ^RFC8040^ apply to the new RESTCONF datastore resources defined
in this document.

# *! start-appendix
#
# * Examples

{{document:
    name ;
    ipr trust200902;
    category std;
    references references.xml;
    updates 8040;
    title "RESTCONF Extensions to Support the Network Management Datastore Architecture";
    contributor "author:Martin Bjorklund:Tail-f Systems:mbj@tail-f.com";
    contributor "author:Juergen Schoenwaelder:Jacobs University:j.schoenwaelder@jacobs-university.de";
    contributor "author:Phil Shafer:Juniper Networks:phil@juniper.net";
    contributor "author:Kent Watsen:Juniper Networks:kwatsen@juniper.net";
    contributor "author:Robert Wilton:Cisco Systems:rwilton@cisco.com";
}}

